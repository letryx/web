fragment SearchResult on sec_contract {
  uid
  accession_number
  sequence
  company_name
  company_cik
  company_sic_name
  # company_geo
  filing_type
  # filing_metadata
  filing_date
  description
  attachment_type
  contract_type
}

# description: { _ilike: "%purchase and sale%", _nilike: "%amendment%" }
query SearchSECContracts(
  $search: String!
  $minDate: date
  $maxDate: date
  $limit: Int = 20
  $offset: Int = 0
  $uidsOnly: Boolean = false
  $contractType: String
  $companyCiks: _text
) {
  sec_search_aggregate(
    args: {
      search: $search
      filing_date_gt: $minDate
      filing_date_lt: $maxDate
      contract_type_eq: $contractType
      company_cik_eq: $companyCiks
    }
  ) {
    nodes @include(if: $uidsOnly) {
      uid
    }
    aggregate {
      filing_count: count(columns: accession_number, distinct: true)
      company_count: count(columns: company_cik, distinct: true)
      count
    }
  }
  sec_search(
    args: {
      search: $search
      filing_date_gt: $minDate
      filing_date_lt: $maxDate
      contract_type_eq: $contractType
      company_cik_eq: $companyCiks
    }
    order_by: { relevance: desc }
    limit: $limit
    offset: $offset
  ) @skip(if: $uidsOnly) {
    ...SearchResult
  }
  companies: sec_search(
    args: {
      # If we want the company list to be constrained
      # by typed queries, uncomment the next line
      # search: $search
      filing_date_gt: $minDate
      filing_date_lt: $maxDate
      contract_type_eq: $contractType
    }
    distinct_on: [company_cik]
  ) {
    company_cik
  }
  contract_types: sec_search(
    args: {
      # If we want the contract_types list to be constrained
      # by typed queries, uncomment the next line
      # search: $search
      filing_date_gt: $minDate
      filing_date_lt: $maxDate
      company_cik_eq: $companyCiks
    }
    distinct_on: [contract_type]
  ) {
    contract_type
  }
}

fragment SECContract on sec_filing_attachment {
  uid
  sequence
  sec_filing {
    accession_number
    filing_date
    filing_type
    sec_company {
      cik
      name
      sic
      sic_name
    }
  }
  attachment_type
  description
  contents
}

fragment Company on sec_contract {
  company_cik
  company_name
  company_geo
}
query GetSECContractCompanies {
  sec_contract(distinct_on: [company_cik]) {
    ...Company
  }
}

query GetSECContract($uid: String!) {
  sec_filing_attachment_by_pk(uid: $uid) {
    ...SECContract
  }
}

fragment ContractTypeFragment on sec_filing_attachment {
  contract_type
}

query GetContractTypes {
  sec_filing_attachment(
    distinct_on: [contract_type]
    # discard null
    where: { contract_type: { _like: "%" } }
  ) {
    ...ContractTypeFragment
  }
}

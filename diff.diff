diff --git i/pages/contracts/index.tsx w/pages/contracts/index.tsx
index 894666d..a432847 100644
--- i/pages/contracts/index.tsx
+++ w/pages/contracts/index.tsx
@@ -131,6 +131,7 @@ export const FunctionalIFrameComponent: FC<IFrameProps> = ({
   const mountNode = contentRef?.contentWindow?.document?.body;
   const { scrollHeight, clientHeight, scrollWidth, clientWidth } =
     mountNode || {};
+  const textColor = useColorModeValue('black', 'white');

   useEffect(() => {
     // handle negative margin in docs
@@ -144,6 +145,16 @@ export const FunctionalIFrameComponent: FC<IFrameProps> = ({
     'style',
     `padding-right: ${paddingRight}px; overflow-y: hidden;`
   );
+  if (contentRef?.contentWindow?.document) {
+    const doc = contentRef?.contentWindow?.document;
+    const style_el = doc.createElement('style');
+    style_el.innerText = `
+      p,font,span {
+        color: ${textColor} !important;
+      }
+    `;
+    mountNode?.appendChild(style_el);
+  }

   return (
     <>
@@ -164,32 +175,47 @@ const ContractModal: FC<SearchResultFragment> = ({
   sequence,
 }) => {
   const { isOpen, onOpen, onClose } = useDisclosure();
+  const color = useColorModeValue('black', 'white');
   const { data, loading } = useGetSecContractQuery({
     variables: { accession_number, sequence },
     skip: isSSR || !isOpen,
   });
   const fontSize = useBreakpointValue({ sm: '100%', md: '110%', lg: '120%' });
-  let html = '';
   let elements: JSX.Element | JSX.Element[] | string | null = null;
   if (data && domPurify && data.sec_filing_attachment_by_pk?.contents) {
-    html = domPurify.sanitize(data.sec_filing_attachment_by_pk?.contents, {
-      // KEEP_CONTENT: false,
-      IN_PLACE: true,
-    });
+    const html = domPurify.sanitize(
+      data.sec_filing_attachment_by_pk?.contents,
+      {
+        // KEEP_CONTENT: false,
+        IN_PLACE: true,
+      }
+    );
     elements = parse(html.replaceAll(/\bPAGEBREAK\b/gi, ''));
     elements = (
       <FunctionalIFrameComponent
         title={`contract-${accession_number}-${sequence}`}
         width="100%"
       >
-        <RemoveScroll forwardProps>
+        <RemoveScroll forwardProps noIsolation>
           <>
-            {typeof elements === 'string' ? (
-              <Box as="pre" style={{ whiteSpace: 'pre-wrap', fontSize }}>
-                {elements}
-              </Box>
-            ) : (
-              elements
+            {(Array.isArray(elements) ? elements : [elements]).map(
+              (element) => (
+                <Box
+                  key={`doc-${accession_number}-${sequence}`}
+                  as={typeof element === 'string' ? 'pre' : 'div'}
+                  style={
+                    typeof element === 'string'
+                      ? {
+                          whiteSpace: 'pre-wrap',
+                          color,
+                          fontSize,
+                        }
+                      : {}
+                  }
+                >
+                  {elements}
+                </Box>
+              )
             )}
           </>
         </RemoveScroll>

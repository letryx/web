name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GRAPHQL_API_URL: https://api.letryx.com/v1/graphql
      GRAPHQL_API_SSR_URL: https://api.letryx.com/v1/graphql
      AUTH0_ISSUER_BASE_URL: https://letryx.us.auth0.com
      AUTH0_BASE_URL: http://localhost:3000
      # use random secret to prevent `TypeError: "secret" is required`
      AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Cache yarn
        uses: c-hive/gha-yarn-cache@v2
      - name: Install dependencies
        run: yarn install
      - name: Typecheck
        run: yarn type-check
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test
      - name: Build
        run: yarn build

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Report image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

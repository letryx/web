services:
  base: &web-base
    build: ./
    user: root
    environment:
      NODE_ENV: development
      GRAPHQL_API_URL: http://graphql-engine:8080/v1/graphql
      HASURA_GRAPHQL_ADMIN_SECRET: '$HASURA_GRAPHQL_ADMIN_SECRET'
    volumes:
      - .:/usr/app
    command: echo ok

  nextjs:
    <<: *web-base
    ports:
      - 3000:3000
    command: yarn dev

  nginx:
    build: ./nginx
    ports:
      - 8000:80

  postgres:
    image: postgres:12
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  graphql-engine:
    # v2.0.0-beta.2.cli-migrations-v3
    # v2.0.0-beta.2
    image: ${HASURA_IMAGE}:v2.0.0-beta.2
    volumes:
      - ./hasura/metadata:/hasura-metadata
    ports:
      - '8080:8080'
    depends_on:
      - 'postgres'
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ADMIN_SECRET: '$HASURA_GRAPHQL_ADMIN_SECRET'
      HASURA_GRAPHQL_JWT_SECRET: >-
        {
          "type": "RS256",
          "jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com",
          "audience": "letryx-web",
          "issuer": "https://securetoken.google.com/letryx-web"
        }
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

volumes:
  db_data:
